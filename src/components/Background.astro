---
import CustomLabel from "../components/CustomLabel.astro";
---

<style>

.background-img {
  background-image: url("/background.jpg");
  background-size: cover;
  background-repeat: no-repeat;
}

.gun-img {
  background-image: url("/gun.png");
  background-size: contain;
  background-repeat: space;
}

.background {
  position: absolute;
  z-index: 0;
  left: 0;
  top: 0;
  width: 100vw;
  height: 100%;
  transition: transform 0s linear;
  overflow: hidden;
}

.overlay {
  background-image: url("/background-gradient.png");
  background-size: cover;
  background-repeat: no-repeat;
  z-index: 1;
}

</style>

<script type="module">
  import { cursorData } from "/stores/app.js";


  const overlay = document.querySelector(".overlay");

  let scaleUniform = 0;
  let threadRunning = 0;

  function easeInSine(x) {
    return 1 - Math.cos((x * Math.PI) / 2);
  }

  const applySize = (size) => {
    const eased = easeInSine(size) * 2/3 + size * 1/3;
    document.querySelector(".overlay").style.transform = 'scale(' + (1 + eased * 6) + ')';
    document.querySelector(".background-img").style.transform = 'scale(' + (1 + eased * 2) + ')';
  }

  let killFwd = false;
  let killBwd = false;

  const updateSizeForward = () => {
    if (killFwd == true) {
      killFwd = false;
      killBwd = false;
      return;
    }
    if (scaleUniform > 1.0) {
      scaleUniform = 1;
      applySize(scaleUniform);
      return;
    }
    const wasOver = scaleUniform < 0.5;

    scaleUniform += 0.0005;

    if (scaleUniform > 0.5 && wasOver == false) {
      cursorData.setMode('door');
    }
    applySize(scaleUniform);
    requestAnimationFrame(updateSizeForward);
  }

  const updateSizeBackward = () => {
    if (killBwd == true) {
      killBwd = false;
      killFwd = false;
      return;
    }
    if (scaleUniform < 0.0) {
      scaleUniform = 0;
      applySize(scaleUniform);
      return;
    }
    scaleUniform -= 0.0005;

    applySize(scaleUniform);
    requestAnimationFrame(updateSizeBackward);
  }


  overlay.addEventListener("mouseover", async () => {
    killBwd = true;
    requestAnimationFrame(updateSizeForward);
  })

  overlay.addEventListener("mouseleave", async () => {
    cursorData.setMode('cursor');
    killFwd = true;
    requestAnimationFrame(updateSizeBackward);
  })

</script>

<div class="background overlay"></div>
<div class="background background-img"></div>
<div
  class="gun-img"
  style="
  position: absolute;
  right: 5px;
  height: 100vh;
  width: 100px;
  overflow: hidden;
  z-index: 2;
  "
/>
<CustomLabel mousetracked={true} text="Peace Activist Has To Admit Barrett .50 Caliber Sniper Rifle Is Pretty Cool"/>
<div
  class="gun-img"
  style="
  position: absolute;
  left: 5px;
  height: 100vh;
  width: 100px;
  transform: scaleX(-1);
  overflow: hidden;
  z-index: 2;
  "
/>
<CustomLabel mousetracked={true} text="Peace Activist Has To Admit Barrett .50 Caliber Sniper Rifle Is Pretty Cool"/>
